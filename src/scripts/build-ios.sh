set -e
set -o pipefail

BUILD_FLAVOR="Release"

while getopts b:t:n: option
do
    case "${option}"
        in
    b) BUILD_FLAVOR=${OPTARG};;
    t) PLUGIN_TARGET_DIR=${OPTARG};;
    n) IOS_SOURCE_DIR=${OPTARG};;
    esac
done

currentPlatform="$(uname -s)"
if [ ! "$currentPlatform" = "Darwin" ]; then
    # only try to build on Mac OS
    echo "iOS build requires Mac OS. Skipping..."
    exit 0
fi

XCODE_PROJ_DIR=`find $IOS_SOURCE_DIR -name "*.xcodeproj" -print`
PROJ_NAME_EXTENTION=$(basename $XCODE_PROJ_DIR)
SOURCE_NAME="${PROJ_NAME_EXTENTION%.*}"

PROJECT_NAME="$SOURCE_NAME.xcodeproj"
TARGET_NAME="$SOURCE_NAME"
FRAMEWORK_NAME="$SOURCE_NAME"
FRAMEWORK_FILE=$FRAMEWORK_NAME.framework
XCFRAMEWORK_FILE=$FRAMEWORK_NAME.xcframework
FRAMEWORK_DSYM_FILE=$FRAMEWORK_NAME.framework.dSYM
IOS_FRAMEWORK_DSYM_FILE=$FRAMEWORK_NAME.ios.framework.dSYM
MAC_FRAMEWORK_DSYM_FILE=$FRAMEWORK_NAME.macos.framework.dSYM

BUILD_DIR="$IOS_SOURCE_DIR/build/intermediates/${FRAMEWORK_NAME}"
BUILD_FOR_DEVICE_DIR="$BUILD_DIR/$BUILD_FLAVOR-iphoneos"
BUILD_FOR_SIMULATOR_DIR="$BUILD_DIR/$BUILD_FLAVOR-iphonesimulator"
BUILD_FOR_MAC_DIR="$BUILD_DIR/$BUILD_FLAVOR-maccatalyst"
BUILD_OUTPUT_DIR="$IOS_SOURCE_DIR/build/outputs"
HAS_DSYM="yes"

PLUGIN_TARGET_SUBDIR="$PLUGIN_TARGET_DIR/ios"

OUTPUT_FRAMEWORK_FILE_DIR=$PLUGIN_TARGET_SUBDIR/$XCFRAMEWORK_FILE
OUTPUT_IOS_FRAMEWORK_DSYM_FILE_DIR=$PLUGIN_TARGET_SUBDIR/$IOS_FRAMEWORK_DSYM_FILE
OUTPUT_MAC_FRAMEWORK_DSYM_FILE_DIR=$PLUGIN_TARGET_SUBDIR/$IOS_FRAMEWORK_DSYM_FILE

cd $IOS_SOURCE_DIR

# rm -rf "$BUILD_DIR"

echo "Build for Mac Catalyst in" $BUILD_FLAVOR "configuration"
xcodebuild -project $PROJECT_NAME -scheme $TARGET_NAME \
    -destination 'variant=Mac Catalyst,arch=x86_64' \
    -configuration "$BUILD_FLAVOR" \
    GCC_PREPROCESSOR_DEFINITIONS='$GCC_PREPROCESSOR_DEFINITIONS ' \
    BUILD_DIR=$BUILD_DIR \
    build -quiet

echo "Build for iphonesimulator in" $BUILD_FLAVOR "configuration"
xcodebuild -project $PROJECT_NAME -scheme $TARGET_NAME \
    -configuration "$BUILD_FLAVOR" \
    -sdk iphonesimulator \
    GCC_PREPROCESSOR_DEFINITIONS='$GCC_PREPROCESSOR_DEFINITIONS ' \
    BUILD_DIR=$BUILD_DIR \
    build -quiet

echo "Build for iphoneos in" $BUILD_FLAVOR "configuration"
xcodebuild -project $PROJECT_NAME -scheme $TARGET_NAME \
    -configuration "$BUILD_FLAVOR" \
    -sdk iphoneos \
    GCC_PREPROCESSOR_DEFINITIONS='$GCC_PREPROCESSOR_DEFINITIONS ' \
    BUILD_DIR=$BUILD_DIR \
    build -quiet

# DEVICE_DIR="$(xcodebuild -project $PROJECT_NAME -scheme $TARGET_NAME -configuration $BUILD_FLAVOR \
    # -showBuildSettings | grep CONFIGURATION_BUILD_DIR | sed 's/.*= //')"

rm -rf "$BUILD_OUTPUT_DIR"
mkdir -p "$BUILD_OUTPUT_DIR"

echo "Create fat dSYM for iOS at $BUILD_OUTPUT_DIR/$IOS_FRAMEWORK_DSYM_FILE"
cp -fr "$BUILD_FOR_SIMULATOR_DIR/$FRAMEWORK_DSYM_FILE" "$BUILD_OUTPUT_DIR/$IOS_FRAMEWORK_DSYM_FILE"
rm "$BUILD_OUTPUT_DIR/$IOS_FRAMEWORK_DSYM_FILE/Contents/Resources/DWARF/$FRAMEWORK_NAME"
lipo -create -output "$BUILD_OUTPUT_DIR/$IOS_FRAMEWORK_DSYM_FILE/Contents/Resources/DWARF/$FRAMEWORK_NAME" \
    "$BUILD_FOR_SIMULATOR_DIR/$FRAMEWORK_DSYM_FILE/Contents/Resources/DWARF/$FRAMEWORK_NAME" \
    "$BUILD_FOR_DEVICE_DIR/$FRAMEWORK_DSYM_FILE/Contents/Resources/DWARF/$FRAMEWORK_NAME"

echo "Copy macOS dSYM to $BUILD_OUTPUT_DIR/$IOS_FRAMEWORK_DSYM_FILE"
cp -fr "$BUILD_FOR_MAC_DIR/$FRAMEWORK_DSYM_FILE" "$BUILD_OUTPUT_DIR/$MAC_FRAMEWORK_DSYM_FILE"


echo "Build xcframework"
xcodebuild -create-xcframework -framework "$BUILD_FOR_SIMULATOR_DIR/$FRAMEWORK_FILE" -framework "$BUILD_FOR_DEVICE_DIR/$FRAMEWORK_FILE" -framework "$BUILD_FOR_MAC_DIR/$FRAMEWORK_FILE" -output "$BUILD_OUTPUT_DIR/$XCFRAMEWORK_FILE"
echo "$XCFRAMEWORK_FILE was built in $BUILD_OUTPUT_DIR"

rm -rf $BUILD_DIR
rm -rf $PLUGIN_TARGET_SUBDIR/XCFrameworks.zip $PLUGIN_TARGET_SUBDIR/*.dSYM* $PLUGIN_TARGET_SUBDIR/*.xcframework
mkdir -p $PLUGIN_TARGET_SUBDIR

echo "Copying $BUILD_OUTPUT_DIR/$XCFRAMEWORK_FILE to $PLUGIN_TARGET_SUBDIR"
cp -R $BUILD_OUTPUT_DIR/$XCFRAMEWORK_FILE $PLUGIN_TARGET_SUBDIR
echo "Copying iOS $IOS_FRAMEWORK_DSYM_FILE to $PLUGIN_TARGET_SUBDIR"
cp -R "$BUILD_OUTPUT_DIR/$IOS_FRAMEWORK_DSYM_FILE" $PLUGIN_TARGET_SUBDIR
echo "Copying macOS $IOS_FRAMEWORK_DSYM_FILE to $PLUGIN_TARGET_SUBDIR"
cp -R "$BUILD_OUTPUT_DIR/$MAC_FRAMEWORK_DSYM_FILE" $PLUGIN_TARGET_SUBDIR
